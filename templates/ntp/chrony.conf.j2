# {{ ansible_managed }}

{% for server in chrony_ntp_servers | default([]) -%}
{% if server is mapping %}
server {{ server.server_host }} {{ server.server_settings }}
{% else %}
server {{ server }} {{ chrony_global_server_settings|default('iburst') }}
{% endif %}
{% endfor -%}

{% for pool in COMMON_NTP_POOL -%}
{% if pool is mapping %}
pool {{ pool.pool_host }} {{ pool.pool_settings }}
{% else %}
pool {{ pool }} {{ chrony_global_pool_settings|default('iburst') }}
{% endif %}
{% endfor -%}

{% for peer in chrony_ntp_peers | default([]) -%}
{% if peer is mapping %}
peer {{ peer.peer_host }} {{ peer.peer_settings }}
{% else %}
peer {{ peer }} {{ chrony_global_peer_settings|default('') }}
{% endif %}
{% endfor -%}

{% if chrony_bind_addresses is defined and chrony_bind_addresses|length > 0 -%}
{% for bind_addr in chrony_bind_addresses %}
bindcmdaddress {{ bind_addr }}
{% endfor %}
{% endif -%}

{% if chrony_acl_rules is defined and chrony_acl_rules|length > 0 -%}
{{ chrony_acl_rules|join("\n") }}
{% endif -%}

{% if chrony_keyfile_path is defined -%}
keyfile {{ chrony_keyfile_path | default('/etc/chrony.keys') }}
{% endif -%}

{% if chrony_driftfile_path is defined -%}
driftfile {{ chrony_driftfile_path | default('/var/lib/chrony/drift') }}
{% endif -%}

{% if chrony_logdir_path is defined -%}
logdir {{ chrony_logdir_path | default('/var/log/chrony') }}
{% endif -%}

{% if chrony_rtc_settings is defined -%}
{{ chrony_rtc_settings|join("\n") }}
{% endif -%}

{% if chrony_log_options is defined -%}
log {{ chrony_log_options }}
{% endif -%}

{% if chrony_makestep is defined -%}
makestep {{ chrony_makestep }}
{% endif -%}

{% if chrony_extra_options is defined -%}
{{ chrony_extra_options|join("\n") }}
{% endif -%}

# Allow the system clock to be stepped in the first three updates
# if its offset is larger than 1 second.
makestep 1.0 3

# Enable kernel synchronization of the real-time clock (RTC).
rtcsync

# Get TAI-UTC offset and leap seconds from the system tz database.
leapsectz {{ chrony_leapsectz | default('right/UTC') }}
